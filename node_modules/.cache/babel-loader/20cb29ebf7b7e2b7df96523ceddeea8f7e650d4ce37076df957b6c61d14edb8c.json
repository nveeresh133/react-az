{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\nimport { strNotSpecified } from \"@microsoft/applicationinsights-common\";\nimport { _throwInternal, getPerformance, objExtend, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\nimport { getClickTarget } from \"../DataCollector\";\nimport { _DYN_ACTION_TYPE, _DYN_BEHAVIOR, _DYN_CAPTURE_PAGE_ACTION, _DYN_CLICK_COORDINATES, _DYN_CLICK_COORDINATE_X, _DYN_CLICK_COORDINATE_Y, _DYN_CONTENT, _DYN_CONTENT_NAME, _DYN_CORE_DATA, _DYN_DATA, _DYN_DATA_TAGS, _DYN_DEFAULT_RIGHT_CLICK_3, _DYN_GET_ELEMENT_CONTENT, _DYN_NAME, _DYN_PAGE_NAME, _DYN_PAGE_TYPE, _DYN_PARENT_DATA_TAG, _DYN_PARENT_ID, _DYN_PROPERTIES, _DYN_REF_URI, _DYN_SET_COMMON_PROPERTIE4, _DYN_TRACK_PAGE_ACTION, _DYN__CONFIG, _DYN__GET_VALID_BEHAVIOR, _DYN__TRACE_LOGGER } from \"../__DynamicConstants\";\nimport { bracketIt, extractFieldFromObject, isValueAssigned } from \"../common/Utils\";\nimport { WebEvent } from \"./WebEvent\";\nvar PageAction = /** @class */function (_super) {\n  __extends(PageAction, _super);\n  function PageAction(clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) {\n    var _this = _super.call(this, clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) || this;\n    dynamicProto(PageAction, _this, function (_self, _base) {\n      _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */] = function (pageActionEvent, properties) {\n        // Get part A properties\n        var ext = {};\n        ext[\"web\"] = {};\n        var event = {\n          name: \"Microsoft.ApplicationInsights.{0}.Event\",\n          baseType: \"EventData\",\n          ext: ext,\n          data: {},\n          baseData: {}\n        };\n        _populateEventDataIfPresent(event.baseData, \"name\", pageActionEvent[_DYN_NAME /* @min:%2ename */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"baseTypeSource\", \"ClickEvent\");\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"uri\", pageActionEvent.uri);\n        _populateEventDataIfPresent(event.data, \"pageType\", pageActionEvent[_DYN_PAGE_TYPE /* @min:%2epageType */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"properties\", pageActionEvent[_DYN_PROPERTIES /* @min:%2eproperties */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"actionType\", pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"behavior\", pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"clickCoordinates\", pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"content\", pageActionEvent[_DYN_CONTENT /* @min:%2econtent */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"targetUri\", pageActionEvent.targetUri);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"timeToAction\", pageActionEvent.timeToAction);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"refUri\", pageActionEvent[_DYN_REF_URI /* @min:%2erefUri */]);\n        _populateEventDataIfPresent(event.data, \"pageName\", pageActionEvent[_DYN_PAGE_NAME /* @min:%2epageName */]);\n        _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"parentId\", pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */]);\n        if (properties) {\n          objForEachKey(properties, function (property, value) {\n            if (!event[_DYN_DATA /* @min:%2edata */][property]) {\n              _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], property, value);\n            }\n          });\n        }\n        _self._clickAnalyticsPlugin.core.track(event);\n      };\n      /**\r\n       * API to create and send a populated PageAction event\r\n       * @param element - DOM element\r\n       * @param overrideValues - PageAction overrides\r\n       * @param customProperties - Custom properties(Part C)\r\n       * @param isRightClick - Flag for mouse right clicks\r\n       */\n      _self[_DYN_CAPTURE_PAGE_ACTION /* @min:%2ecapturePageAction */] = function (element, overrideValues, customProperties, isRightClick) {\n        overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\n        var pageActionEvent = {\n          name: \"\"\n        };\n        var pageActionProperties = isValueAssigned(customProperties) ? customProperties : {};\n        _self[_DYN_SET_COMMON_PROPERTIE4 /* @min:%2esetCommonProperties */](pageActionEvent, overrideValues);\n        pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self._getBehavior(overrideValues);\n        // element in scope is needed for below properties.  We cannot pass element into the plugin call chain.\n        // process them here.\n        var elementContent = {};\n        if (isRightClick) {\n          // Default behavior for righ click\n          pageActionEvent.behavior = _self._config[_DYN_DEFAULT_RIGHT_CLICK_3 /* @min:%2edefaultRightClickBhvr */];\n        }\n        // Fill PartB\n        if (element) {\n          pageActionEvent.targetUri = getClickTarget(element);\n          elementContent = _self._contentHandler[_DYN_GET_ELEMENT_CONTENT /* @min:%2egetElementContent */](element); // collect id,cn tags\n          // if the element has a data-*-bhvr attrib defined, use it.\n          if (elementContent.bhvr && !isValueAssigned(overrideValues[_DYN_BEHAVIOR /* @min:%2ebehavior */])) {\n            var currentBehavior = extractFieldFromObject(elementContent, \"bhvr\");\n            pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self[_DYN__GET_VALID_BEHAVIOR /* @min:%2e_getValidBehavior */](currentBehavior);\n          }\n          // Validate to ensure the minimum required field 'contentName' or 'id' is present. However,\n          // requiring these fields would result in majority of adopter's content from being collected.\n          // Just throw a warning and continue collection.\n          if (!isValueAssigned(elementContent.id) && !isValueAssigned(elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */])) {\n            _throwInternal(_self[_DYN__TRACE_LOGGER /* @min:%2e_traceLogger */], 2 /* eLoggingSeverity.WARNING */, 102 /* _eInternalMessageId.InvalidContentBlob */, \"Missing attributes id or contentName in click event. Click event information will still be collected!\");\n          }\n        }\n        pageActionEvent.name = elementContent.id || elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] || strNotSpecified;\n        pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] = elementContent.parentid || elementContent.parentName || strNotSpecified;\n        if (isValueAssigned(overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */])) {\n          pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */] = overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */];\n        }\n        if (isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */]) && isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */])) {\n          pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */] = overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */] + \"X\" + overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */];\n        }\n        _sanitizePageActionEventContent(elementContent);\n        pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] = bracketIt(JSON.stringify(objExtend(elementContent, overrideValues && overrideValues.contentTags ? overrideValues.contentTags : {})));\n        pageActionEvent.timeToAction = _getTimeToClick();\n        pageActionEvent.refUri = isValueAssigned(overrideValues.refUri) ? overrideValues.refUri : _self._config[_DYN_CORE_DATA /* @min:%2ecoreData */].referrerUri;\n        if (_isUndefinedEvent(pageActionEvent)) {\n          return;\n        }\n        _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */](pageActionEvent, pageActionProperties);\n      };\n      // capture performance data into PageTags\n      function _getTimeToClick() {\n        var perf = getPerformance();\n        if (perf && perf.timing) {\n          var isNavigationStart = perf.timing.navigationStart;\n          if (isNavigationStart && isNavigationStart !== 0) {\n            return new Date().getTime() - isNavigationStart;\n          }\n        }\n        return -1;\n      }\n      function _populateEventDataIfPresent(obj, property, value) {\n        if (isValueAssigned(value)) {\n          obj[property] = value;\n        }\n      }\n      function _sanitizePageActionEventContent(pageActionContent) {\n        if (pageActionContent) {\n          delete pageActionContent.id;\n          delete pageActionContent.parentid;\n          delete pageActionContent.parentname;\n          if (_self._config && _self._config.dataTags && isValueAssigned(_self._config.dataTags[_DYN_PARENT_DATA_TAG /* @min:%2eparentDataTag */])) {\n            delete pageActionContent[_self[_DYN__CONFIG /* @min:%2e_config */][_DYN_DATA_TAGS /* @min:%2edataTags */].parentDataTag];\n          }\n        }\n      }\n      function _isUndefinedEvent(pageActionEvent) {\n        if (_self[_DYN__CONFIG /* @min:%2e_config */].dropInvalidEvents) {\n          if (pageActionEvent[_DYN_NAME /* @min:%2ename */] === strNotSpecified && pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] === strNotSpecified && pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] === \"[{}]\") {\n            return true;\n          }\n        }\n        return false;\n      }\n    });\n    return _this;\n  }\n  // Removed Stub for PageAction.prototype.trackPageAction.\n  // Removed Stub for PageAction.prototype.capturePageAction.\n  // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n  // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n  PageAction.__ieDyn = 1;\n  return PageAction;\n}(WebEvent);\nexport { PageAction };","map":{"version":3,"names":["__extendsFn","__extends","dynamicProto","strNotSpecified","_throwInternal","getPerformance","objExtend","objForEachKey","getClickTarget","_DYN_ACTION_TYPE","_DYN_BEHAVIOR","_DYN_CAPTURE_PAGE_ACTION","_DYN_CLICK_COORDINATES","_DYN_CLICK_COORDINATE_X","_DYN_CLICK_COORDINATE_Y","_DYN_CONTENT","_DYN_CONTENT_NAME","_DYN_CORE_DATA","_DYN_DATA","_DYN_DATA_TAGS","_DYN_DEFAULT_RIGHT_CLICK_3","_DYN_GET_ELEMENT_CONTENT","_DYN_NAME","_DYN_PAGE_NAME","_DYN_PAGE_TYPE","_DYN_PARENT_DATA_TAG","_DYN_PARENT_ID","_DYN_PROPERTIES","_DYN_REF_URI","_DYN_SET_COMMON_PROPERTIE4","_DYN_TRACK_PAGE_ACTION","_DYN__CONFIG","_DYN__GET_VALID_BEHAVIOR","_DYN__TRACE_LOGGER","bracketIt","extractFieldFromObject","isValueAssigned","WebEvent","PageAction","_super","clickAnalyticsPlugin","config","contentHandler","pageTagsCallback","metaTags","traceLogger","_this","call","_self","_base","pageActionEvent","properties","ext","event","name","baseType","data","baseData","_populateEventDataIfPresent","uri","targetUri","timeToAction","property","value","_clickAnalyticsPlugin","core","track","element","overrideValues","customProperties","isRightClick","pageActionProperties","_getBehavior","elementContent","behavior","_config","_contentHandler","bhvr","currentBehavior","id","parentid","parentName","_sanitizePageActionEventContent","JSON","stringify","contentTags","_getTimeToClick","refUri","referrerUri","_isUndefinedEvent","perf","timing","isNavigationStart","navigationStart","Date","getTime","obj","pageActionContent","parentname","dataTags","parentDataTag","dropInvalidEvents"],"sources":["/home/veeresh133/app/test-error-react/react-az/node_modules/@microsoft/applicationinsights-clickanalytics-js/dist-es5/events/PageAction.js"],"sourcesContent":["/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { strNotSpecified } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, getPerformance, objExtend, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getClickTarget } from \"../DataCollector\";\r\nimport { _DYN_ACTION_TYPE, _DYN_BEHAVIOR, _DYN_CAPTURE_PAGE_ACTION, _DYN_CLICK_COORDINATES, _DYN_CLICK_COORDINATE_X, _DYN_CLICK_COORDINATE_Y, _DYN_CONTENT, _DYN_CONTENT_NAME, _DYN_CORE_DATA, _DYN_DATA, _DYN_DATA_TAGS, _DYN_DEFAULT_RIGHT_CLICK_3, _DYN_GET_ELEMENT_CONTENT, _DYN_NAME, _DYN_PAGE_NAME, _DYN_PAGE_TYPE, _DYN_PARENT_DATA_TAG, _DYN_PARENT_ID, _DYN_PROPERTIES, _DYN_REF_URI, _DYN_SET_COMMON_PROPERTIE4, _DYN_TRACK_PAGE_ACTION, _DYN__CONFIG, _DYN__GET_VALID_BEHAVIOR, _DYN__TRACE_LOGGER } from \"../__DynamicConstants\";\r\nimport { bracketIt, extractFieldFromObject, isValueAssigned } from \"../common/Utils\";\r\nimport { WebEvent } from \"./WebEvent\";\r\nvar PageAction = /** @class */ (function (_super) {\r\n    __extends(PageAction, _super);\r\n    function PageAction(clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) {\r\n        var _this = _super.call(this, clickAnalyticsPlugin, config, contentHandler, pageTagsCallback, metaTags, traceLogger) || this;\r\n        dynamicProto(PageAction, _this, function (_self, _base) {\r\n            _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */] = function (pageActionEvent, properties) {\r\n                // Get part A properties\r\n                var ext = {};\r\n                ext[\"web\"] = {};\r\n                var event = {\r\n                    name: \"Microsoft.ApplicationInsights.{0}.Event\",\r\n                    baseType: \"EventData\",\r\n                    ext: ext,\r\n                    data: {},\r\n                    baseData: {}\r\n                };\r\n                _populateEventDataIfPresent(event.baseData, \"name\", pageActionEvent[_DYN_NAME /* @min:%2ename */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"baseTypeSource\", \"ClickEvent\");\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"uri\", pageActionEvent.uri);\r\n                _populateEventDataIfPresent(event.data, \"pageType\", pageActionEvent[_DYN_PAGE_TYPE /* @min:%2epageType */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"properties\", pageActionEvent[_DYN_PROPERTIES /* @min:%2eproperties */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"actionType\", pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"behavior\", pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"clickCoordinates\", pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"content\", pageActionEvent[_DYN_CONTENT /* @min:%2econtent */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"targetUri\", pageActionEvent.targetUri);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"timeToAction\", pageActionEvent.timeToAction);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"refUri\", pageActionEvent[_DYN_REF_URI /* @min:%2erefUri */]);\r\n                _populateEventDataIfPresent(event.data, \"pageName\", pageActionEvent[_DYN_PAGE_NAME /* @min:%2epageName */]);\r\n                _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], \"parentId\", pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */]);\r\n                if (properties) {\r\n                    objForEachKey(properties, function (property, value) {\r\n                        if (!event[_DYN_DATA /* @min:%2edata */][property]) {\r\n                            _populateEventDataIfPresent(event[_DYN_DATA /* @min:%2edata */], property, value);\r\n                        }\r\n                    });\r\n                }\r\n                _self._clickAnalyticsPlugin.core.track(event);\r\n            };\r\n            /**\r\n             * API to create and send a populated PageAction event\r\n             * @param element - DOM element\r\n             * @param overrideValues - PageAction overrides\r\n             * @param customProperties - Custom properties(Part C)\r\n             * @param isRightClick - Flag for mouse right clicks\r\n             */\r\n            _self[_DYN_CAPTURE_PAGE_ACTION /* @min:%2ecapturePageAction */] = function (element, overrideValues, customProperties, isRightClick) {\r\n                overrideValues = !isValueAssigned(overrideValues) ? {} : overrideValues;\r\n                var pageActionEvent = { name: \"\" };\r\n                var pageActionProperties = isValueAssigned(customProperties) ? customProperties : {};\r\n                _self[_DYN_SET_COMMON_PROPERTIE4 /* @min:%2esetCommonProperties */](pageActionEvent, overrideValues);\r\n                pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self._getBehavior(overrideValues);\r\n                // element in scope is needed for below properties.  We cannot pass element into the plugin call chain.\r\n                // process them here.\r\n                var elementContent = {};\r\n                if (isRightClick) {\r\n                    // Default behavior for righ click\r\n                    pageActionEvent.behavior = _self._config[_DYN_DEFAULT_RIGHT_CLICK_3 /* @min:%2edefaultRightClickBhvr */];\r\n                }\r\n                // Fill PartB\r\n                if (element) {\r\n                    pageActionEvent.targetUri = getClickTarget(element);\r\n                    elementContent = _self._contentHandler[_DYN_GET_ELEMENT_CONTENT /* @min:%2egetElementContent */](element); // collect id,cn tags\r\n                    // if the element has a data-*-bhvr attrib defined, use it.\r\n                    if (elementContent.bhvr && !isValueAssigned(overrideValues[_DYN_BEHAVIOR /* @min:%2ebehavior */])) {\r\n                        var currentBehavior = extractFieldFromObject(elementContent, \"bhvr\");\r\n                        pageActionEvent[_DYN_BEHAVIOR /* @min:%2ebehavior */] = _self[_DYN__GET_VALID_BEHAVIOR /* @min:%2e_getValidBehavior */](currentBehavior);\r\n                    }\r\n                    // Validate to ensure the minimum required field 'contentName' or 'id' is present. However,\r\n                    // requiring these fields would result in majority of adopter's content from being collected.\r\n                    // Just throw a warning and continue collection.\r\n                    if (!isValueAssigned(elementContent.id) && !isValueAssigned(elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */])) {\r\n                        _throwInternal(_self[_DYN__TRACE_LOGGER /* @min:%2e_traceLogger */], 2 /* eLoggingSeverity.WARNING */, 102 /* _eInternalMessageId.InvalidContentBlob */, \"Missing attributes id or contentName in click event. Click event information will still be collected!\");\r\n                    }\r\n                }\r\n                pageActionEvent.name = elementContent.id || elementContent[_DYN_CONTENT_NAME /* @min:%2econtentName */] || strNotSpecified;\r\n                pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] = elementContent.parentid || elementContent.parentName || strNotSpecified;\r\n                if (isValueAssigned(overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */])) {\r\n                    pageActionEvent[_DYN_ACTION_TYPE /* @min:%2eactionType */] = overrideValues[_DYN_ACTION_TYPE /* @min:%2eactionType */];\r\n                }\r\n                if (isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */]) && isValueAssigned(overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */])) {\r\n                    pageActionEvent[_DYN_CLICK_COORDINATES /* @min:%2eclickCoordinates */] = overrideValues[_DYN_CLICK_COORDINATE_X /* @min:%2eclickCoordinateX */] + \"X\" + overrideValues[_DYN_CLICK_COORDINATE_Y /* @min:%2eclickCoordinateY */];\r\n                }\r\n                _sanitizePageActionEventContent(elementContent);\r\n                pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] = bracketIt(JSON.stringify(objExtend(elementContent, overrideValues && overrideValues.contentTags ? overrideValues.contentTags : {})));\r\n                pageActionEvent.timeToAction = _getTimeToClick();\r\n                pageActionEvent.refUri = isValueAssigned(overrideValues.refUri) ? overrideValues.refUri : _self._config[_DYN_CORE_DATA /* @min:%2ecoreData */].referrerUri;\r\n                if (_isUndefinedEvent(pageActionEvent)) {\r\n                    return;\r\n                }\r\n                _self[_DYN_TRACK_PAGE_ACTION /* @min:%2etrackPageAction */](pageActionEvent, pageActionProperties);\r\n            };\r\n            // capture performance data into PageTags\r\n            function _getTimeToClick() {\r\n                var perf = getPerformance();\r\n                if (perf && perf.timing) {\r\n                    var isNavigationStart = perf.timing.navigationStart;\r\n                    if (isNavigationStart && isNavigationStart !== 0) {\r\n                        return new Date().getTime() - isNavigationStart;\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n            function _populateEventDataIfPresent(obj, property, value) {\r\n                if (isValueAssigned(value)) {\r\n                    obj[property] = value;\r\n                }\r\n            }\r\n            function _sanitizePageActionEventContent(pageActionContent) {\r\n                if (pageActionContent) {\r\n                    delete pageActionContent.id;\r\n                    delete pageActionContent.parentid;\r\n                    delete pageActionContent.parentname;\r\n                    if (_self._config && _self._config.dataTags && isValueAssigned(_self._config.dataTags[_DYN_PARENT_DATA_TAG /* @min:%2eparentDataTag */])) {\r\n                        delete pageActionContent[_self[_DYN__CONFIG /* @min:%2e_config */][_DYN_DATA_TAGS /* @min:%2edataTags */].parentDataTag];\r\n                    }\r\n                }\r\n            }\r\n            function _isUndefinedEvent(pageActionEvent) {\r\n                if (_self[_DYN__CONFIG /* @min:%2e_config */].dropInvalidEvents) {\r\n                    if (pageActionEvent[_DYN_NAME /* @min:%2ename */] === strNotSpecified\r\n                        && pageActionEvent[_DYN_PARENT_ID /* @min:%2eparentId */] === strNotSpecified\r\n                        && pageActionEvent[_DYN_CONTENT /* @min:%2econtent */] === \"[{}]\") {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * API to send pageAction event\r\n     * @param pageActionEvent - PageAction event\r\n     * @param properties - PageAction properties(Part C)\r\n     */\r\n    PageAction.prototype.trackPageAction = function (pageActionEvent, properties) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * API to create and send a populated PageAction event\r\n     * @param element - DOM element\r\n     * @param overrideValues - PageAction overrides\r\n     * @param customProperties - Custom properties(Part C)\r\n     * @param isRightClick - Flag for mouse right clicks\r\n     */\r\n    PageAction.prototype.capturePageAction = function (element, overrideValues, customProperties, isRightClick) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return PageAction;\r\n}(WebEvent));\r\nexport { PageAction };\r\n//# sourceMappingURL=PageAction.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}