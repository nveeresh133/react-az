{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\nimport { STR_EMPTY } from \"./InternalConstants\";\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\n// Added to help with minification\nvar strGetPrototypeOf = \"getPrototypeOf\";\nvar rCamelCase = /-([a-z])/g;\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\nexport var _getObjProto = Object[strGetPrototypeOf];\nexport function isNotUndefined(value) {\n  return !isUndefined(value);\n}\nexport function isNotNullOrUndefined(value) {\n  return !isNullOrUndefined(value);\n}\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\nexport function normalizeJsName(name) {\n  var value = name;\n  if (value && isString(value)) {\n    // CamelCase everything after the \"-\" and remove the dash\n    value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\n      return letter.toUpperCase();\n    });\n    value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\n    value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\n      return \"_\" + match;\n    });\n  }\n  return value;\n}\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\nexport function strContains(value, search) {\n  if (value && search) {\n    return strIndexOf(value, search) !== -1;\n  }\n  return false;\n}\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\nexport function toISOString(date) {\n  return date && date.toISOString() || \"\";\n}\nexport var deepFreeze = objDeepFreeze;\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\nexport function getExceptionName(object) {\n  if (isError(object)) {\n    return object[_DYN_NAME /* @min:%2ename */];\n  }\n  return STR_EMPTY;\n}\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\nexport function setValue(target, field, value, valChk, srcChk) {\n  var theValue = value;\n  if (target) {\n    theValue = target[field];\n    if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\n      theValue = value;\n      target[field] = theValue;\n    }\n  }\n  return theValue;\n}\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\nexport function getSetValue(target, field, defValue) {\n  var theValue;\n  if (target) {\n    theValue = target[field];\n    if (!theValue && isNullOrUndefined(theValue)) {\n      // Supports having the default as null\n      theValue = !isUndefined(defValue) ? defValue : {};\n      target[field] = theValue;\n    }\n  } else {\n    // Expanded for performance so we only check defValue if required\n    theValue = !isUndefined(defValue) ? defValue : {};\n  }\n  return theValue;\n}\nfunction _createProxyFunction(source, funcName) {\n  var srcFunc = null;\n  var src = null;\n  if (isFunction(source)) {\n    srcFunc = source;\n  } else {\n    src = source;\n  }\n  return function () {\n    // Capture the original arguments passed to the method\n    var originalArguments = arguments;\n    if (srcFunc) {\n      src = srcFunc();\n    }\n    if (src) {\n      return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\n    }\n  };\n}\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\nexport function proxyAssign(target, source, chkSet) {\n  if (target && source && isObject(target) && isObject(source)) {\n    var _loop_1 = function (field) {\n      if (isString(field)) {\n        var value = source[field];\n        if (isFunction(value)) {\n          if (!chkSet || chkSet(field, true, source, target)) {\n            // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\n            target[field] = _createProxyFunction(source, field);\n          }\n        } else if (!chkSet || chkSet(field, false, source, target)) {\n          if (objHasOwn(target, field)) {\n            // Remove any previous instance property\n            delete target[field];\n          }\n          objDefine(target, field, {\n            g: function () {\n              return source[field];\n            },\n            s: function (theValue) {\n              source[field] = theValue;\n            }\n          });\n        }\n      }\n    };\n    // effectively apply/proxy full source to the target instance\n    for (var field in source) {\n      _loop_1(field);\n    }\n  }\n  return target;\n}\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\n  if (target && name && source) {\n    if (overwriteTarget !== false || isUndefined(target[name])) {\n      target[name] = _createProxyFunction(source, theFunc);\n    }\n  }\n}\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\n  if (target && source && isObject(target) && isArray(functionsToProxy)) {\n    arrForEach(functionsToProxy, function (theFuncName) {\n      if (isString(theFuncName)) {\n        proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\n      }\n    });\n  }\n  return target;\n}\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\nexport function createClassFromInterface(defaults) {\n  return /** @class */function () {\n    function class_1() {\n      var _this = this;\n      if (defaults) {\n        objForEachKey(defaults, function (field, value) {\n          _this[field] = value;\n        });\n      }\n    }\n    return class_1;\n  }();\n}\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\nexport function optimizeObject(theObject) {\n  // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\n  // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\n  if (theObject && ObjAssign) {\n    theObject = ObjClass(ObjAssign({}, theObject));\n  }\n  return theObject;\n}\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\n  // Variables\n  var theArgs = arguments;\n  var extended = theArgs[0] || {};\n  var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\n  var deep = false;\n  var idx = 1;\n  // Check for \"Deep\" flag\n  if (argLen > 0 && isBoolean(extended)) {\n    deep = extended;\n    extended = theArgs[idx] || {};\n    idx++;\n  }\n  // Handle case when target is a string or something (possible in deep copy)\n  if (!isObject(extended)) {\n    extended = {};\n  }\n  // Loop through each remaining object and conduct a merge\n  for (; idx < argLen; idx++) {\n    var arg = theArgs[idx];\n    var isArgArray = isArray(arg);\n    var isArgObj = isObject(arg);\n    for (var prop in arg) {\n      var propOk = isArgArray && prop in arg || isArgObj && objHasOwn(arg, prop);\n      if (!propOk) {\n        continue;\n      }\n      var newValue = arg[prop];\n      var isNewArray = void 0;\n      // If deep merge and property is an object, merge properties\n      if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\n        // Grab the current value of the extended object\n        var clone = extended[prop];\n        if (isNewArray) {\n          if (!isArray(clone)) {\n            // We can't \"merge\" an array with a non-array so overwrite the original\n            clone = [];\n          }\n        } else if (!isPlainObject(clone)) {\n          // We can't \"merge\" an object with a non-object\n          clone = {};\n        }\n        // Never move the original objects always clone them\n        newValue = objExtend(deep, clone, newValue);\n      }\n      // Assign the new (or previous) value (unless undefined)\n      if (newValue !== undefined) {\n        extended[prop] = newValue;\n      }\n    }\n  }\n  return extended;\n}\nexport var asString = asString21;\nexport function isFeatureEnabled(feature, cfg) {\n  var rlt = false;\n  var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\n  if (feature && ft) {\n    var mode = ft.mode;\n    // NOTE: None will be considered as true\n    rlt = mode == 3 /* FeatureOptInMode.enable */ || mode == 1 /* FeatureOptInMode.none */;\n  }\n  return rlt;\n}\nexport function getResponseText(xhr) {\n  try {\n    return xhr.responseText;\n  } catch (e) {\n    // Best effort, as XHR may throw while XDR wont so just ignore\n  }\n  return null;\n}\nexport function formatErrorMessageXdr(xdr, message) {\n  if (xdr) {\n    return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\n  }\n  return message;\n}\nexport function formatErrorMessageXhr(xhr, message) {\n  if (xhr) {\n    return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\n  }\n  return message;\n}\nexport function prependTransports(theTransports, newTransports) {\n  if (newTransports) {\n    if (isNumber(newTransports)) {\n      theTransports = [newTransports].concat(theTransports);\n    } else if (isArray(newTransports)) {\n      theTransports = newTransports.concat(theTransports);\n    }\n  }\n  return theTransports;\n}\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\nvar strWithCredentials = \"withCredentials\";\nvar strTimeout = \"timeout\";\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\n  if (disabled === void 0) {\n    disabled = false;\n  }\n  if (isSync === void 0) {\n    isSync = false;\n  }\n  function _wrapSetXhrProp(xhr, prop, value) {\n    try {\n      xhr[prop] = value;\n    } catch (e) {\n      // - Wrapping as depending on the environment setting the property may fail (non-terminally)\n    }\n  }\n  var xhr = new XMLHttpRequest();\n  if (disabled) {\n    // Tag the instance so it's not tracked (trackDependency)\n    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\n    // cause the request to fail and we no telemetry would be sent\n    _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\n  }\n  if (withCredentials) {\n    // Some libraries require that the withCredentials flag is set \"before\" open and\n    // - Wrapping as IE 10 has started throwing when setting before open\n    _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\n  }\n  xhr.open(method, urlString, !isSync);\n  if (withCredentials) {\n    // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\n    // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\n    _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\n  }\n  // Only set the timeout for asynchronous requests as\n  // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\n  if (!isSync && timeout) {\n    _wrapSetXhrProp(xhr, strTimeout, timeout);\n  }\n  return xhr;\n}\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\n// tslint:disable-next-line: align\nexport function convertAllHeadersToMap(headersString) {\n  var headers = {};\n  if (isString(headersString)) {\n    var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\n    arrForEach(headersArray, function (headerEntry) {\n      if (headerEntry) {\n        var idx = headerEntry.indexOf(\": \");\n        if (idx !== -1) {\n          // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\n          var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\n          var value = strTrim(headerEntry.substring(idx + 1));\n          headers[header] = value;\n        } else {\n          headers[strTrim(headerEntry)] = 1;\n        }\n      }\n    });\n  }\n  return headers;\n}\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\nexport function _appendHeader(theHeaders, xhr, name) {\n  if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\n    var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\n    if (value) {\n      theHeaders[name] = strTrim(value);\n    }\n  }\n  return theHeaders;\n}\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\nexport function _getAllResponseHeaders(xhr, isOneDs) {\n  var theHeaders = {};\n  if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\n    // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\n    // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\n    // as collector is not currently returning the correct header to allow JS to access these headers\n    if (!!isOneDs) {\n      theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\n      theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\n      theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\n    }\n  } else {\n    theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\n  }\n  return theHeaders;\n}","map":{"version":3,"names":["ObjAssign","ObjClass","arrForEach","asString","asString21","isArray","isBoolean","isError","isFunction","isNullOrUndefined","isNumber","isObject","isPlainObject","isString","isUndefined","objDeepFreeze","objDefine","objForEachKey","objHasOwn","strIndexOf","strTrim","_DYN_APPLY","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_GET_RESPONSE_HEADER","_DYN_LENGTH","_DYN_NAME","_DYN_REPLACE","_DYN_SPLIT","_DYN_STATUS","_DYN_TO_LOWER_CASE","STR_EMPTY","strGetPrototypeOf","rCamelCase","rNormalizeInvalid","rLeadingNumeric","_getObjProto","Object","isNotUndefined","value","isNotNullOrUndefined","normalizeJsName","name","_all","letter","toUpperCase","match","strContains","search","toISOString","date","deepFreeze","getExceptionName","object","setValue","target","field","valChk","srcChk","theValue","getSetValue","defValue","_createProxyFunction","source","funcName","srcFunc","src","originalArguments","arguments","proxyAssign","chkSet","_loop_1","g","s","proxyFunctionAs","theFunc","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","class_1","_this","optimizeObject","theObject","objExtend","obj1","obj2","obj3","obj4","obj5","obj6","theArgs","extended","argLen","deep","idx","arg","isArgArray","isArgObj","prop","propOk","newValue","isNewArray","clone","undefined","isFeatureEnabled","feature","cfg","rlt","ft","featureOptIn","mode","getResponseText","xhr","responseText","e","formatErrorMessageXdr","xdr","message","formatErrorMessageXhr","response","prependTransports","theTransports","newTransports","concat","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","method","urlString","withCredentials","disabled","isSync","timeout","_wrapSetXhrProp","XMLHttpRequest","open","convertAllHeadersToMap","headersString","headers","headersArray","headerEntry","indexOf","header","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","isOneDs"],"sources":["/home/veeresh133/app/api-call/react-az/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}