{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { Metric } from \"@microsoft/applicationinsights-common\";\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\nvar Sample = /** @class */function () {\n  function Sample(sampleRate, logger) {\n    // We're using 32 bit math, hence max value is (2^31 - 1)\n    this.INT_MAX_VALUE = 2147483647;\n    var _logger = logger || safeGetLogger(null);\n    if (sampleRate > 100 || sampleRate < 0) {\n      _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", {\n        samplingRate: sampleRate\n      }, true);\n      sampleRate = 100;\n    }\n    this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\n    this.samplingScoreGenerator = new SamplingScoreGenerator();\n  }\n  /**\r\n  * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n  */\n  Sample.prototype.isSampledIn = function (envelope) {\n    var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\n    var isSampledIn = false;\n    if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\n      return true;\n    } else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\n      // exclude MetricData telemetry from sampling\n      return true;\n    }\n    isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\n    return isSampledIn;\n  };\n  return Sample;\n}();\nexport { Sample };","map":{"version":3,"names":["Metric","safeGetLogger","_DYN_DATA_TYPE","_DYN_GET_SAMPLING_SCORE","_DYN_SAMPLE_RATE","SamplingScoreGenerator","Sample","sampleRate","logger","INT_MAX_VALUE","_logger","throwInternal","samplingRate","samplingScoreGenerator","prototype","isSampledIn","envelope","samplingPercentage","undefined","baseType"],"sources":["/home/veeresh133/app/test-error-react/react-az/node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map"],"mappings":";;;;;AAEA,SAAAA,MAAA;AACA,SAAAC,aAAA;AACA,SAAAC,cAAA,EAAAC,uBAAA,EAAAC,gBAAA;AACA,SAAAC,sBAAA;AACA,IAAAC,MAAA;EACA,SAAAA,OAAAC,UAAA,EAAAC,MAAA;IACA;IACA,KAAAC,aAAA;IACA,IAAAC,OAAA,GAAAF,MAAA,IAAAP,aAAA;IACA,IAAAM,UAAA,UAAAA,UAAA;MACAG,OAAA,CAAAC,aAAA;QAAAC,YAAA,EAAAL;MAAA;MACAA,UAAA;IACA;IACA,KAAAH,gBAAA,6BAAAG,UAAA;IACA,KAAAM,sBAAA,OAAAR,sBAAA;EACA;EACA;AACA;AACA;EACAC,MAAA,CAAAQ,SAAA,CAAAC,WAAA,aAAAC,QAAA;IACA,IAAAC,kBAAA,QAAAb,gBAAA;IACA,IAAAW,WAAA;IACA,IAAAE,kBAAA,aAAAA,kBAAA,KAAAC,SAAA,IAAAD,kBAAA;MACA;IACA,OACA,IAAAD,QAAA,CAAAG,QAAA,KAAAnB,MAAA,CAAAE,cAAA;MACA;MACA;IACA;IACAa,WAAA,QAAAF,sBAAA,CAAAV,uBAAA,iCAAAa,QAAA,IAAAC,kBAAA;IACA,OAAAF,WAAA;EACA;EACA,OAAAT,MAAA;AACA;AACA,SAAAA,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}