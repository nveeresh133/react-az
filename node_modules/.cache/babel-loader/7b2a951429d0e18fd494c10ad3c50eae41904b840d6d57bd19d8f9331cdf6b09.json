{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { getInst } from \"@nevware21/ts-utils\";\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\nvar _aiNamespace = null;\nvar _debugListener;\nfunction _listenerProxyFunc(name, config) {\n  return function () {\n    var args = arguments;\n    var dbgExt = getDebugExt(config);\n    if (dbgExt) {\n      var listener = dbgExt.listener;\n      if (listener && listener[name]) {\n        listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\n      }\n    }\n  };\n}\nfunction _getExtensionNamespace() {\n  // Cache the lookup of the global namespace object\n  var target = getInst(\"Microsoft\");\n  if (target) {\n    _aiNamespace = target[\"ApplicationInsights\"];\n  }\n  return _aiNamespace;\n}\nexport function getDebugExt(config) {\n  var ns = _aiNamespace;\n  if (!ns && config.disableDbgExt !== true) {\n    ns = _aiNamespace || _getExtensionNamespace();\n  }\n  return ns ? ns[\"ChromeDbgExt\"] : null;\n}\nexport function getDebugListener(config) {\n  if (!_debugListener) {\n    _debugListener = {};\n    for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\n      _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\n    }\n  }\n  return _debugListener;\n}","map":{"version":3,"names":["getInst","_DYN_APPLY","_DYN_LENGTH","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_EVENTS_SENT","STR_PERF_EVENT","listenerFuncs","_aiNamespace","_debugListener","_listenerProxyFunc","name","config","args","arguments","dbgExt","getDebugExt","listener","_getExtensionNamespace","target","ns","disableDbgExt","getDebugListener","lp"],"sources":["/home/veeresh133/app/api-call/react-az/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map"],"mappings":";;;;;AAEA,SAAAA,OAAA;AACA,SAAAC,UAAA,EAAAC,WAAA;AACA,SAAAC,oBAAA,EAAAC,uBAAA,EAAAC,eAAA,EAAAC,cAAA;AACA,IAAAC,aAAA,IAAAF,eAAA,EAAAF,oBAAA,EAAAC,uBAAA,EAAAE,cAAA;AACA,IAAAE,YAAA;AACA,IAAAC,cAAA;AACA,SAAAC,mBAAAC,IAAA,EAAAC,MAAA;EACA;IACA,IAAAC,IAAA,GAAAC,SAAA;IACA,IAAAC,MAAA,GAAAC,WAAA,CAAAJ,MAAA;IACA,IAAAG,MAAA;MACA,IAAAE,QAAA,GAAAF,MAAA,CAAAE,QAAA;MACA,IAAAA,QAAA,IAAAA,QAAA,CAAAN,IAAA;QACAM,QAAA,CAAAN,IAAA,EAAAV,UAAA,sBAAAgB,QAAA,EAAAJ,IAAA;MACA;IACA;EACA;AACA;AACA,SAAAK,uBAAA;EACA;EACA,IAAAC,MAAA,GAAAnB,OAAA;EACA,IAAAmB,MAAA;IACAX,YAAA,GAAAW,MAAA;EACA;EACA,OAAAX,YAAA;AACA;AACA,gBAAAQ,YAAAJ,MAAA;EACA,IAAAQ,EAAA,GAAAZ,YAAA;EACA,KAAAY,EAAA,IAAAR,MAAA,CAAAS,aAAA;IACAD,EAAA,GAAAZ,YAAA,IAAAU,sBAAA;EACA;EACA,OAAAE,EAAA,GAAAA,EAAA;AACA;AACA,gBAAAE,iBAAAV,MAAA;EACA,KAAAH,cAAA;IACAA,cAAA;IACA,SAAAc,EAAA,MAAAA,EAAA,GAAAhB,aAAA,CAAAL,WAAA,wBAAAqB,EAAA;MACAd,cAAA,CAAAF,aAAA,CAAAgB,EAAA,KAAAb,kBAAA,CAAAH,aAAA,CAAAgB,EAAA,GAAAX,MAAA;IACA;EACA;EACA,OAAAH,cAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}