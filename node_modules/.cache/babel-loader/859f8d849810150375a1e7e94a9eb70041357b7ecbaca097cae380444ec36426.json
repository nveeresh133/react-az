{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - React Plugin, 17.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\nimport { dateNow } from '@microsoft/applicationinsights-core-js';\nimport * as React from 'react';\n/**\r\n * Higher-order component base class to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n */\nvar AITrackedComponentBase = /** @class */function (_super) {\n  __extends(AITrackedComponentBase, _super);\n  function AITrackedComponentBase(props, reactPlugin, componentName) {\n    var _this = _super.call(this, props) || this;\n    _this._mountTimestamp = 0;\n    _this._firstActiveTimestamp = 0;\n    _this._idleStartTimestamp = 0;\n    _this._lastActiveTimestamp = 0;\n    _this._totalIdleTime = 0;\n    _this._idleCount = 0;\n    _this._idleTimeout = 5000;\n    _this.trackActivity = function (e) {\n      if (_this._firstActiveTimestamp === 0) {\n        _this._firstActiveTimestamp = dateNow();\n        _this._lastActiveTimestamp = _this._firstActiveTimestamp;\n      } else {\n        _this._lastActiveTimestamp = dateNow();\n      }\n      if (_this._idleStartTimestamp > 0) {\n        var lastIdleTime = _this._lastActiveTimestamp - _this._idleStartTimestamp;\n        _this._totalIdleTime += lastIdleTime;\n        _this._idleStartTimestamp = 0;\n      }\n    };\n    _this._reactPlugin = reactPlugin;\n    _this._componentName = componentName;\n    return _this;\n  }\n  AITrackedComponentBase.prototype.componentDidMount = function () {\n    var _this = this;\n    this._mountTimestamp = dateNow();\n    this._firstActiveTimestamp = 0;\n    this._totalIdleTime = 0;\n    this._lastActiveTimestamp = 0;\n    this._idleStartTimestamp = 0;\n    this._idleCount = 0;\n    this._intervalId = setInterval(function () {\n      if (_this._lastActiveTimestamp > 0 && _this._idleStartTimestamp === 0 && dateNow() - _this._lastActiveTimestamp >= _this._idleTimeout) {\n        _this._idleStartTimestamp = dateNow();\n        _this._idleCount++;\n      }\n    }, 100);\n  };\n  AITrackedComponentBase.prototype.componentWillUnmount = function () {\n    if (this._mountTimestamp === 0) {\n      throw new Error('withAITracking:componentWillUnmount: mountTimestamp is not initialized.');\n    }\n    if (this._intervalId) {\n      clearInterval(this._intervalId);\n    }\n    if (this._firstActiveTimestamp === 0) {\n      return;\n    }\n    var engagementTime = this.getEngagementTimeSeconds();\n    var metricData = {\n      average: engagementTime,\n      name: 'React Component Engaged Time (seconds)',\n      sampleCount: 1\n    };\n    var additionalProperties = {\n      'Component Name': this._componentName\n    };\n    this._reactPlugin.trackMetric(metricData, additionalProperties);\n  };\n  AITrackedComponentBase.prototype.getEngagementTimeSeconds = function () {\n    return (dateNow() - this._firstActiveTimestamp - this._totalIdleTime - this._idleCount * this._idleTimeout) / 1000;\n  };\n  return AITrackedComponentBase;\n}(React.Component);\nexport { AITrackedComponentBase };\n/**\r\n * Higher-order component function to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n *\r\n * @param reactPlugin ReactPlugin instance\r\n * @param Component the React component to be instrumented\r\n * @param componentName (optional) component name\r\n * @param className (optional) className of the HOC div\r\n */\nexport default function withAITracking(reactPlugin, Component, componentName, className) {\n  if (componentName === undefined || componentName === null || typeof componentName !== 'string') {\n    componentName = Component.prototype && Component.prototype.constructor && Component.prototype.constructor.name || 'Unknown';\n  }\n  if (className === undefined || className === null || typeof className !== 'string') {\n    className = '';\n  }\n  return /** @class */function (_super) {\n    __extends(class_1, _super);\n    function class_1(props) {\n      return _super.call(this, props, reactPlugin, componentName) || this;\n    }\n    class_1.prototype.render = function () {\n      return React.createElement(\"div\", {\n        onKeyDown: this.trackActivity,\n        onMouseMove: this.trackActivity,\n        onScroll: this.trackActivity,\n        onMouseDown: this.trackActivity,\n        onTouchStart: this.trackActivity,\n        onTouchMove: this.trackActivity,\n        className: className\n      }, React.createElement(Component, __assign({}, this.props)));\n    };\n    return class_1;\n  }(AITrackedComponentBase);\n}","map":{"version":3,"names":["__assignFn","__assign","__extendsFn","__extends","dateNow","React","AITrackedComponentBase","_super","props","reactPlugin","componentName","_this","call","_mountTimestamp","_firstActiveTimestamp","_idleStartTimestamp","_lastActiveTimestamp","_totalIdleTime","_idleCount","_idleTimeout","trackActivity","e","lastIdleTime","_reactPlugin","_componentName","prototype","componentDidMount","_intervalId","setInterval","componentWillUnmount","Error","clearInterval","engagementTime","getEngagementTimeSeconds","metricData","average","name","sampleCount","additionalProperties","trackMetric","Component","withAITracking","className","undefined","constructor","class_1","render","createElement","onKeyDown","onMouseMove","onScroll","onMouseDown","onTouchStart","onTouchMove"],"sources":["/home/veeresh133/app/test-error-react/react-az/node_modules/@microsoft/applicationinsights-react-js/dist-esm/withAITracking.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { __assign, __extends } from \"tslib\";\r\nimport { dateNow } from '@microsoft/applicationinsights-core-js';\r\nimport * as React from 'react';\r\n/**\r\n * Higher-order component base class to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n */\r\nvar AITrackedComponentBase = /** @class */ (function (_super) {\r\n    __extends(AITrackedComponentBase, _super);\r\n    function AITrackedComponentBase(props, reactPlugin, componentName) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._mountTimestamp = 0;\r\n        _this._firstActiveTimestamp = 0;\r\n        _this._idleStartTimestamp = 0;\r\n        _this._lastActiveTimestamp = 0;\r\n        _this._totalIdleTime = 0;\r\n        _this._idleCount = 0;\r\n        _this._idleTimeout = 5000;\r\n        _this.trackActivity = function (e) {\r\n            if (_this._firstActiveTimestamp === 0) {\r\n                _this._firstActiveTimestamp = dateNow();\r\n                _this._lastActiveTimestamp = _this._firstActiveTimestamp;\r\n            }\r\n            else {\r\n                _this._lastActiveTimestamp = dateNow();\r\n            }\r\n            if (_this._idleStartTimestamp > 0) {\r\n                var lastIdleTime = _this._lastActiveTimestamp - _this._idleStartTimestamp;\r\n                _this._totalIdleTime += lastIdleTime;\r\n                _this._idleStartTimestamp = 0;\r\n            }\r\n        };\r\n        _this._reactPlugin = reactPlugin;\r\n        _this._componentName = componentName;\r\n        return _this;\r\n    }\r\n    AITrackedComponentBase.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this._mountTimestamp = dateNow();\r\n        this._firstActiveTimestamp = 0;\r\n        this._totalIdleTime = 0;\r\n        this._lastActiveTimestamp = 0;\r\n        this._idleStartTimestamp = 0;\r\n        this._idleCount = 0;\r\n        this._intervalId = setInterval(function () {\r\n            if (_this._lastActiveTimestamp > 0 && _this._idleStartTimestamp === 0 && dateNow() - _this._lastActiveTimestamp >= _this._idleTimeout) {\r\n                _this._idleStartTimestamp = dateNow();\r\n                _this._idleCount++;\r\n            }\r\n        }, 100);\r\n    };\r\n    AITrackedComponentBase.prototype.componentWillUnmount = function () {\r\n        if (this._mountTimestamp === 0) {\r\n            throw new Error('withAITracking:componentWillUnmount: mountTimestamp is not initialized.');\r\n        }\r\n        if (this._intervalId) {\r\n            clearInterval(this._intervalId);\r\n        }\r\n        if (this._firstActiveTimestamp === 0) {\r\n            return;\r\n        }\r\n        var engagementTime = this.getEngagementTimeSeconds();\r\n        var metricData = {\r\n            average: engagementTime,\r\n            name: 'React Component Engaged Time (seconds)',\r\n            sampleCount: 1\r\n        };\r\n        var additionalProperties = { 'Component Name': this._componentName };\r\n        this._reactPlugin.trackMetric(metricData, additionalProperties);\r\n    };\r\n    AITrackedComponentBase.prototype.getEngagementTimeSeconds = function () {\r\n        return (dateNow() - this._firstActiveTimestamp - this._totalIdleTime - this._idleCount * this._idleTimeout) / 1000;\r\n    };\r\n    return AITrackedComponentBase;\r\n}(React.Component));\r\nexport { AITrackedComponentBase };\r\n/**\r\n * Higher-order component function to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n *\r\n * @param reactPlugin ReactPlugin instance\r\n * @param Component the React component to be instrumented\r\n * @param componentName (optional) component name\r\n * @param className (optional) className of the HOC div\r\n */\r\nexport default function withAITracking(reactPlugin, Component, componentName, className) {\r\n    if (componentName === undefined || componentName === null || typeof componentName !== 'string') {\r\n        componentName = Component.prototype &&\r\n            Component.prototype.constructor &&\r\n            Component.prototype.constructor.name ||\r\n            'Unknown';\r\n    }\r\n    if (className === undefined || className === null || typeof className !== 'string') {\r\n        className = '';\r\n    }\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1(props) {\r\n            return _super.call(this, props, reactPlugin, componentName) || this;\r\n        }\r\n        class_1.prototype.render = function () {\r\n            return (React.createElement(\"div\", { onKeyDown: this.trackActivity, onMouseMove: this.trackActivity, onScroll: this.trackActivity, onMouseDown: this.trackActivity, onTouchStart: this.trackActivity, onTouchMove: this.trackActivity, className: className },\r\n                React.createElement(Component, __assign({}, this.props))));\r\n        };\r\n        return class_1;\r\n    }(AITrackedComponentBase));\r\n}\r\n//# sourceMappingURL=withAITracking.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}