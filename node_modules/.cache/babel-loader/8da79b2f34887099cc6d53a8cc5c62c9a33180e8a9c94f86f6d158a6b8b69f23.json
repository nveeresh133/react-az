{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Click Analytics, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* @copyright Microsoft 2020\r\n*/\nimport { getDocument, getLocation, getWindow, hasDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\nimport { scheduleTimeout } from \"@nevware21/ts-utils\";\nimport { _DYN_ADD_EVENT_LISTENER, _DYN_CORE_DATA, _DYN_LENGTH, _DYN_PAGE_NAME, _DYN_PATHNAME, _DYN_REQUEST_URI, _DYN_TAG_NAME, _DYN_TO_UPPER_CASE } from \"./__DynamicConstants\";\nimport { findClosestAnchor, isValueAssigned } from \"./common/Utils\";\nvar clickCaptureInputTypes = {\n  BUTTON: true,\n  CHECKBOX: true,\n  RADIO: true,\n  RESET: true,\n  SUBMIT: true\n};\n/**\r\n * Get Image href of a given HTMLImageElement\r\n * @param element - An html image element\r\n * @returns Href value.\r\n */\nexport function getImageHref(element) {\n  var temp = element;\n  if (temp) {\n    var parent = findClosestAnchor(temp);\n    if (parent[_DYN_LENGTH /* @min:%2elength */] === 1) {\n      var firstParent = parent[0];\n      if (firstParent.href) {\n        return firstParent.href;\n      } else if (firstParent.src) {\n        return firstParent.src;\n      }\n    }\n  }\n  return \"\";\n}\n/**\r\n * Get click target\r\n * @returns Click target URI\r\n */\nexport function getClickTarget(element) {\n  var clickTarget = \"\";\n  switch (element[_DYN_TAG_NAME /* @min:%2etagName */]) {\n    case \"A\":\n    case \"AREA\":\n      clickTarget = element.href || \"\";\n      break;\n    case \"IMG\":\n      clickTarget = getImageHref(element);\n      break;\n    case \"INPUT\":\n      var type = element.type;\n      if (type && clickCaptureInputTypes[type[_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]()]) {\n        var loc = getLocation() || {};\n        if (element.form) {\n          clickTarget = element.form.action || loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\";\n        } else {\n          clickTarget = loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\";\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return clickTarget;\n}\n/**\r\n * Execute callback when DOM finish loading\r\n */\nexport function onDomLoaded(callback) {\n  onDomReadyDo(function () {\n    if (hasDocument() && getDocument().readyState === \"complete\") {\n      callback();\n    } else {\n      var win = getWindow();\n      if (win) {\n        if (win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */]) {\n          win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */](\"load\", function () {\n            callback();\n          }); // NB **not** 'onload'\n        } else if (win.attachEvent) {\n          win.attachEvent(\"onload\", function () {\n            callback();\n          }); // IE8\n        }\n      }\n    }\n  });\n}\n// use smallest domready ever for IE8. When IE8 is deprecated, use addEventListener('DomContentLoaded')\nfunction onDomReadyDo(f) {\n  /// <summary> fires function f on domRead </summary>\n  /// <param type='function'>function to call on domRead</param>\n  var doc = getDocument() || {};\n  /in/.test(doc.readyState) ? scheduleTimeout(function () {\n    onDomReadyDo(f);\n  }, 100) : f.call();\n}\n/**\r\n * Gets the pageName from the DOM or by calling a override if set.\r\n * @param config - configuration object\r\n * @returns Page name.\r\n */\nexport function getPageName(config, overrideValues) {\n  /// <summary>\n  ///  Gets the pageName from the DOM or by calling a override if set.\n  /// </summary>\n  if (overrideValues && overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */]) {\n    return overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */];\n  } else if (config.callback && isFunction(config.callback[_DYN_PAGE_NAME /* @min:%2epageName */])) {\n    return config.callback[_DYN_PAGE_NAME /* @min:%2epageName */]();\n  } else if (config.coreData && config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */]) {\n    return config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */];\n  } else {\n    var doc = getDocument();\n    return doc && doc.title || \"\";\n  }\n}\n/**\r\n * Sanitize URL values\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\nexport function sanitizeUrl(config, location) {\n  if (!location) {\n    return null;\n  }\n  var url = location.protocol + \"//\" + (location.hostname || location.host) + (\n  // location.hostname is not supported on Opera and Opera for Android\n  isValueAssigned(location.port) ? \":\" + location.port : \"\") + location[_DYN_PATHNAME /* @min:%2epathname */];\n  if (!!config.urlCollectHash) {\n    // false by default\n    url += isValueAssigned(location.hash) ? location.hash : \"\";\n  }\n  if (!!config.urlCollectQuery) {\n    // false by default\n    url += isValueAssigned(location.search) ? location.search : \"\";\n  }\n  return url;\n}\n/**\r\n * Get URI, sanitize the value if configured on\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\nexport function getUri(config, location) {\n  if (config.coreData && config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */] && config[_DYN_CORE_DATA /* @min:%2ecoreData */][_DYN_REQUEST_URI /* @min:%2erequestUri */] !== \"\") {\n    return config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */];\n  }\n  return sanitizeUrl(config, location);\n}","map":{"version":3,"names":["getDocument","getLocation","getWindow","hasDocument","isFunction","scheduleTimeout","_DYN_ADD_EVENT_LISTENER","_DYN_CORE_DATA","_DYN_LENGTH","_DYN_PAGE_NAME","_DYN_PATHNAME","_DYN_REQUEST_URI","_DYN_TAG_NAME","_DYN_TO_UPPER_CASE","findClosestAnchor","isValueAssigned","clickCaptureInputTypes","BUTTON","CHECKBOX","RADIO","RESET","SUBMIT","getImageHref","element","temp","parent","firstParent","href","src","getClickTarget","clickTarget","type","loc","form","action","onDomLoaded","callback","onDomReadyDo","readyState","win","attachEvent","f","doc","test","call","getPageName","config","overrideValues","coreData","title","sanitizeUrl","location","url","protocol","hostname","host","port","urlCollectHash","hash","urlCollectQuery","search","getUri"],"sources":["/home/veeresh133/app/react-az/node_modules/@microsoft/applicationinsights-clickanalytics-js/dist-es5/DataCollector.js"],"sourcesContent":["/**\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { getDocument, getLocation, getWindow, hasDocument, isFunction } from \"@microsoft/applicationinsights-core-js\";\r\nimport { scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ADD_EVENT_LISTENER, _DYN_CORE_DATA, _DYN_LENGTH, _DYN_PAGE_NAME, _DYN_PATHNAME, _DYN_REQUEST_URI, _DYN_TAG_NAME, _DYN_TO_UPPER_CASE } from \"./__DynamicConstants\";\r\nimport { findClosestAnchor, isValueAssigned } from \"./common/Utils\";\r\nvar clickCaptureInputTypes = { BUTTON: true, CHECKBOX: true, RADIO: true, RESET: true, SUBMIT: true };\r\n/**\r\n * Get Image href of a given HTMLImageElement\r\n * @param element - An html image element\r\n * @returns Href value.\r\n */\r\nexport function getImageHref(element) {\r\n    var temp = element;\r\n    if (temp) {\r\n        var parent = findClosestAnchor(temp);\r\n        if (parent[_DYN_LENGTH /* @min:%2elength */] === 1) {\r\n            var firstParent = parent[0];\r\n            if (firstParent.href) {\r\n                return firstParent.href;\r\n            }\r\n            else if (firstParent.src) {\r\n                return (firstParent.src);\r\n            }\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Get click target\r\n * @returns Click target URI\r\n */\r\nexport function getClickTarget(element) {\r\n    var clickTarget = \"\";\r\n    switch (element[_DYN_TAG_NAME /* @min:%2etagName */]) {\r\n        case \"A\":\r\n        case \"AREA\":\r\n            clickTarget = element.href || \"\";\r\n            break;\r\n        case \"IMG\":\r\n            clickTarget = getImageHref(element);\r\n            break;\r\n        case \"INPUT\":\r\n            var type = element.type;\r\n            if (type && (clickCaptureInputTypes[type[_DYN_TO_UPPER_CASE /* @min:%2etoUpperCase */]()])) {\r\n                var loc = getLocation() || {};\r\n                if (element.form) {\r\n                    clickTarget = element.form.action || (loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\");\r\n                }\r\n                else {\r\n                    clickTarget = loc[_DYN_PATHNAME /* @min:%2epathname */] || \"\";\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return clickTarget;\r\n}\r\n/**\r\n * Execute callback when DOM finish loading\r\n */\r\nexport function onDomLoaded(callback) {\r\n    onDomReadyDo(function () {\r\n        if (hasDocument() && getDocument().readyState === \"complete\") {\r\n            callback();\r\n        }\r\n        else {\r\n            var win = getWindow();\r\n            if (win) {\r\n                if (win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */]) {\r\n                    win[_DYN_ADD_EVENT_LISTENER /* @min:%2eaddEventListener */](\"load\", function () {\r\n                        callback();\r\n                    }); // NB **not** 'onload'\r\n                }\r\n                else if (win.attachEvent) {\r\n                    win.attachEvent(\"onload\", function () {\r\n                        callback();\r\n                    }); // IE8\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n// use smallest domready ever for IE8. When IE8 is deprecated, use addEventListener('DomContentLoaded')\r\nfunction onDomReadyDo(f) {\r\n    /// <summary> fires function f on domRead </summary>\r\n    /// <param type='function'>function to call on domRead</param>\r\n    var doc = getDocument() || {};\r\n    /in/.test(doc.readyState) ? scheduleTimeout(function () {\r\n        onDomReadyDo(f);\r\n    }, 100) : f.call();\r\n}\r\n/**\r\n * Gets the pageName from the DOM or by calling a override if set.\r\n * @param config - configuration object\r\n * @returns Page name.\r\n */\r\nexport function getPageName(config, overrideValues) {\r\n    /// <summary>\r\n    ///  Gets the pageName from the DOM or by calling a override if set.\r\n    /// </summary>\r\n    if (overrideValues && overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */]) {\r\n        return overrideValues[_DYN_PAGE_NAME /* @min:%2epageName */];\r\n    }\r\n    else if (config.callback && isFunction(config.callback[_DYN_PAGE_NAME /* @min:%2epageName */])) {\r\n        return config.callback[_DYN_PAGE_NAME /* @min:%2epageName */]();\r\n    }\r\n    else if (config.coreData && config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */]) {\r\n        return config.coreData[_DYN_PAGE_NAME /* @min:%2epageName */];\r\n    }\r\n    else {\r\n        var doc = getDocument();\r\n        return doc && doc.title || \"\";\r\n    }\r\n}\r\n/**\r\n * Sanitize URL values\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\r\nexport function sanitizeUrl(config, location) {\r\n    if (!location) {\r\n        return null;\r\n    }\r\n    var url = location.protocol + \"//\" + (location.hostname || location.host) + // location.hostname is not supported on Opera and Opera for Android\r\n        (isValueAssigned(location.port) ? \":\" + location.port : \"\") +\r\n        location[_DYN_PATHNAME /* @min:%2epathname */];\r\n    if (!!config.urlCollectHash) { // false by default\r\n        url += (isValueAssigned(location.hash) ? location.hash : \"\");\r\n    }\r\n    if (!!config.urlCollectQuery) { // false by default\r\n        url += (isValueAssigned(location.search) ? location.search : \"\");\r\n    }\r\n    return url;\r\n}\r\n/**\r\n * Get URI, sanitize the value if configured on\r\n * @param config - Configuration\r\n * @param location - window.location or document.location\r\n * @returns Flag indicating if an element is market PII.\r\n */\r\nexport function getUri(config, location) {\r\n    if (config.coreData && config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */] && config[_DYN_CORE_DATA /* @min:%2ecoreData */][_DYN_REQUEST_URI /* @min:%2erequestUri */] !== \"\") {\r\n        return config.coreData[_DYN_REQUEST_URI /* @min:%2erequestUri */];\r\n    }\r\n    return sanitizeUrl(config, location);\r\n}\r\n//# sourceMappingURL=DataCollector.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}