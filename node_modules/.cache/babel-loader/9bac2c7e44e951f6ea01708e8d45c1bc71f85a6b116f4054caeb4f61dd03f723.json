{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\nimport { strIkey, strNotSpecified } from \"./Constants\";\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\nimport { _DYN_NAME } from \"./__DynamicConstants\";\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\n  var _a;\n  envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\n  if (isNullOrUndefined(item) || isNullOrUndefined(baseType) || isNullOrUndefined(envelopeName)) {\n    throwError(\"Input doesn't contain all required fields\");\n  }\n  var iKey = \"\";\n  if (item[strIkey]) {\n    iKey = item[strIkey];\n    delete item[strIkey];\n  }\n  var telemetryItem = (_a = {}, _a[_DYN_NAME /* @min:name */] = envelopeName, _a.time = toISOString(new Date()), _a.iKey = iKey, _a.ext = systemProperties ? systemProperties : {}, _a.tags = [], _a.data = {}, _a.baseType = baseType, _a.baseData = item // Part B\n  , _a);\n  // Part C\n  if (!isNullOrUndefined(customProperties)) {\n    objForEachKey(customProperties, function (prop, value) {\n      telemetryItem.data[prop] = value;\n    });\n  }\n  return telemetryItem;\n}\nvar TelemetryItemCreator = /** @class */function () {\n  function TelemetryItemCreator() {}\n  /**\r\n   * Create a telemetry item that the 1DS channel understands\r\n   * @param item - domain specific properties; part B\r\n   * @param baseType - telemetry item type. ie PageViewData\r\n   * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n   * @param customProperties - user defined custom properties; part C\r\n   * @param systemProperties - system properties that are added to the context; part A\r\n   * @returns ITelemetryItem that is sent to channel\r\n   */\n  TelemetryItemCreator.create = createTelemetryItem;\n  return TelemetryItemCreator;\n}();\nexport { TelemetryItemCreator };","map":{"version":3,"names":["isNullOrUndefined","objForEachKey","throwError","toISOString","strIkey","strNotSpecified","dataSanitizeString","_DYN_NAME","createTelemetryItem","item","baseType","envelopeName","logger","customProperties","systemProperties","_a","iKey","telemetryItem","time","Date","ext","tags","data","baseData","prop","value","TelemetryItemCreator","create"],"sources":["/home/veeresh133/app/json-holder-api/react-az/node_modules/@microsoft/applicationinsights-common/dist-es5/TelemetryItemCreator.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { isNullOrUndefined, objForEachKey, throwError, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIkey, strNotSpecified } from \"./Constants\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { _DYN_NAME } from \"./__DynamicConstants\";\r\n/**\r\n * Create a telemetry item that the 1DS channel understands\r\n * @param item - domain specific properties; part B\r\n * @param baseType - telemetry item type. ie PageViewData\r\n * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n * @param customProperties - user defined custom properties; part C\r\n * @param systemProperties - system properties that are added to the context; part A\r\n * @returns ITelemetryItem that is sent to channel\r\n */\r\nexport function createTelemetryItem(item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n    var _a;\r\n    envelopeName = dataSanitizeString(logger, envelopeName) || strNotSpecified;\r\n    if (isNullOrUndefined(item) ||\r\n        isNullOrUndefined(baseType) ||\r\n        isNullOrUndefined(envelopeName)) {\r\n        throwError(\"Input doesn't contain all required fields\");\r\n    }\r\n    var iKey = \"\";\r\n    if (item[strIkey]) {\r\n        iKey = item[strIkey];\r\n        delete item[strIkey];\r\n    }\r\n    var telemetryItem = (_a = {},\r\n        _a[_DYN_NAME /* @min:name */] = envelopeName,\r\n        _a.time = toISOString(new Date()),\r\n        _a.iKey = iKey,\r\n        _a.ext = systemProperties ? systemProperties : {},\r\n        _a.tags = [],\r\n        _a.data = {},\r\n        _a.baseType = baseType,\r\n        _a.baseData = item // Part B\r\n    ,\r\n        _a);\r\n    // Part C\r\n    if (!isNullOrUndefined(customProperties)) {\r\n        objForEachKey(customProperties, function (prop, value) {\r\n            telemetryItem.data[prop] = value;\r\n        });\r\n    }\r\n    return telemetryItem;\r\n}\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item - domain specific properties; part B\r\n     * @param baseType - telemetry item type. ie PageViewData\r\n     * @param envelopeName - name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties - user defined custom properties; part C\r\n     * @param systemProperties - system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = createTelemetryItem;\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map"],"mappings":";;;;;AAEA,SAAAA,iBAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,WAAA;AACA,SAAAC,OAAA,EAAAC,eAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,SAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAAC,oBAAAC,IAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACA,IAAAC,EAAA;EACAJ,YAAA,GAAAL,kBAAA,CAAAM,MAAA,EAAAD,YAAA,KAAAN,eAAA;EACA,IAAAL,iBAAA,CAAAS,IAAA,KACAT,iBAAA,CAAAU,QAAA,KACAV,iBAAA,CAAAW,YAAA;IACAT,UAAA;EACA;EACA,IAAAc,IAAA;EACA,IAAAP,IAAA,CAAAL,OAAA;IACAY,IAAA,GAAAP,IAAA,CAAAL,OAAA;IACA,OAAAK,IAAA,CAAAL,OAAA;EACA;EACA,IAAAa,aAAA,IAAAF,EAAA,OACAA,EAAA,CAAAR,SAAA,oBAAAI,YAAA,EACAI,EAAA,CAAAG,IAAA,GAAAf,WAAA,KAAAgB,IAAA,KACAJ,EAAA,CAAAC,IAAA,GAAAA,IAAA,EACAD,EAAA,CAAAK,GAAA,GAAAN,gBAAA,GAAAA,gBAAA,OACAC,EAAA,CAAAM,IAAA,OACAN,EAAA,CAAAO,IAAA,OACAP,EAAA,CAAAL,QAAA,GAAAA,QAAA,EACAK,EAAA,CAAAQ,QAAA,GAAAd,IAAA;EAAA,EAEAM,EAAA;EACA;EACA,KAAAf,iBAAA,CAAAa,gBAAA;IACAZ,aAAA,CAAAY,gBAAA,YAAAW,IAAA,EAAAC,KAAA;MACAR,aAAA,CAAAK,IAAA,CAAAE,IAAA,IAAAC,KAAA;IACA;EACA;EACA,OAAAR,aAAA;AACA;AACA,IAAAS,oBAAA;EACA,SAAAA,qBAAA,GACA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA,oBAAA,CAAAC,MAAA,GAAAnB,mBAAA;EACA,OAAAkB,oBAAA;AACA;AACA,SAAAA,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}