{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Core, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \n// \nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\nimport { _throwInternal } from \"./DiagnosticLogger\";\nimport { getExceptionName } from \"./HelperFuncs\";\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\n  var theInitializer = {\n    id: id,\n    fn: telemetryInitializer\n  };\n  arrAppend(_initializers, theInitializer);\n  var handler = {\n    remove: function () {\n      arrForEach(_initializers, function (initializer, idx) {\n        if (initializer.id === theInitializer.id) {\n          _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\n          return -1;\n        }\n      });\n    }\n  };\n  return handler;\n}\nfunction _runInitializers(_initializers, item, logger) {\n  var doNotSendItem = false;\n  var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\n  for (var i = 0; i < telemetryInitializersCount; ++i) {\n    var telemetryInitializer = _initializers[i];\n    if (telemetryInitializer) {\n      try {\n        if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\n          doNotSendItem = true;\n          break;\n        }\n      } catch (e) {\n        // log error but dont stop executing rest of the telemetry initializers\n        // doNotSendItem = true;\n        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), {\n          exception: dumpObj(e)\n        }, true);\n      }\n    }\n  }\n  return !doNotSendItem;\n}\nvar TelemetryInitializerPlugin = /** @class */function (_super) {\n  __extends(TelemetryInitializerPlugin, _super);\n  function TelemetryInitializerPlugin() {\n    var _this = _super.call(this) || this;\n    _this.identifier = \"TelemetryInitializerPlugin\";\n    _this.priority = 199;\n    // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\n    var _id;\n    var _initializers;\n    _initDefaults();\n    dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\n      _self.addTelemetryInitializer = function (telemetryInitializer) {\n        return _addInitializer(_initializers, _id++, telemetryInitializer);\n      };\n      _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\n        if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\n          _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\n        }\n      };\n      _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\n        _initDefaults();\n      };\n    });\n    function _initDefaults() {\n      _id = 0;\n      _initializers = [];\n    }\n    return _this;\n  }\n  // Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\n  // Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\n  // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n  // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n  TelemetryInitializerPlugin.__ieDyn = 1;\n  return TelemetryInitializerPlugin;\n}(BaseTelemetryPlugin);\nexport { TelemetryInitializerPlugin };","map":{"version":3,"names":["__extendsFn","__extends","dynamicProto","arrAppend","arrForEach","dumpObj","_DYN_APPLY","_DYN_DIAG_LOG","_DYN_LENGTH","_DYN_PROCESS_NEXT","_DYN_SPLICE","_DYN__DO_TEARDOWN","BaseTelemetryPlugin","_throwInternal","getExceptionName","STR_PROCESS_TELEMETRY","_addInitializer","_initializers","id","telemetryInitializer","theInitializer","fn","handler","remove","initializer","idx","_runInitializers","item","logger","doNotSendItem","telemetryInitializersCount","i","e","exception","TelemetryInitializerPlugin","_super","_this","call","identifier","priority","_id","_initDefaults","_self","_base","addTelemetryInitializer","itemCtx"],"sources":["/home/veeresh133/app/react-az/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js"],"sourcesContent":["// // Copyright (c) Microsoft Corporation. All rights reserved.\r\n// // Licensed under the MIT License.\r\nimport { __extends } from \"tslib\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Add a telemetry processor to decorate or drop telemetry events.\r\n     * @param telemetryInitializer - The Telemetry Initializer function\r\n     * @returns - A ITelemetryInitializerHandler to enable the initializer to be removed\r\n     */\r\n    TelemetryInitializerPlugin.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    TelemetryInitializerPlugin.prototype.processTelemetry = function (env, itemCtx) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map"],"mappings":";;;;AAAA;AACA;AACA,SAAAA,WAAA,IAAAC,SAAA;AACA,OAAAC,YAAA;AACA,SAAAC,SAAA,EAAAC,UAAA,EAAAC,OAAA;AACA,SAAAC,UAAA,EAAAC,aAAA,EAAAC,WAAA,EAAAC,iBAAA,EAAAC,WAAA,EAAAC,iBAAA;AACA,SAAAC,mBAAA;AACA,SAAAC,cAAA;AACA,SAAAC,gBAAA;AACA,SAAAC,qBAAA;AACA,SAAAC,gBAAAC,aAAA,EAAAC,EAAA,EAAAC,oBAAA;EACA,IAAAC,cAAA;IACAF,EAAA,EAAAA,EAAA;IACAG,EAAA,EAAAF;EACA;EACAhB,SAAA,CAAAc,aAAA,EAAAG,cAAA;EACA,IAAAE,OAAA;IACAC,MAAA,WAAAA,CAAA;MACAnB,UAAA,CAAAa,aAAA,YAAAO,WAAA,EAAAC,GAAA;QACA,IAAAD,WAAA,CAAAN,EAAA,KAAAE,cAAA,CAAAF,EAAA;UACAD,aAAA,CAAAP,WAAA,uBAAAe,GAAA;UACA;QACA;MACA;IACA;EACA;EACA,OAAAH,OAAA;AACA;AACA,SAAAI,iBAAAT,aAAA,EAAAU,IAAA,EAAAC,MAAA;EACA,IAAAC,aAAA;EACA,IAAAC,0BAAA,GAAAb,aAAA,CAAAT,WAAA;EACA,SAAAuB,CAAA,MAAAA,CAAA,GAAAD,0BAAA,IAAAC,CAAA;IACA,IAAAZ,oBAAA,GAAAF,aAAA,CAAAc,CAAA;IACA,IAAAZ,oBAAA;MACA;QACA,IAAAA,oBAAA,CAAAE,EAAA,CAAAf,UAAA,6BAAAqB,IAAA;UACAE,aAAA;UACA;QACA;MACA,EACA,OAAAG,CAAA;QACA;QACA;QACAnB,cAAA,CAAAe,MAAA,gIAAAd,gBAAA,CAAAkB,CAAA;UAAAC,SAAA,EAAA5B,OAAA,CAAA2B,CAAA;QAAA;MACA;IACA;EACA;EACA,QAAAH,aAAA;AACA;AACA,IAAAK,0BAAA,0BAAAC,MAAA;EACAlC,SAAA,CAAAiC,0BAAA,EAAAC,MAAA;EACA,SAAAD,2BAAA;IACA,IAAAE,KAAA,GAAAD,MAAA,CAAAE,IAAA;IACAD,KAAA,CAAAE,UAAA;IACAF,KAAA,CAAAG,QAAA;IACA;IACA,IAAAC,GAAA;IACA,IAAAvB,aAAA;IACAwB,aAAA;IACAvC,YAAA,CAAAgC,0BAAA,EAAAE,KAAA,YAAAM,KAAA,EAAAC,KAAA;MACAD,KAAA,CAAAE,uBAAA,aAAAzB,oBAAA;QACA,OAAAH,eAAA,CAAAC,aAAA,EAAAuB,GAAA,IAAArB,oBAAA;MACA;MACAuB,KAAA,CAAA3B,qBAAA,6CAAAY,IAAA,EAAAkB,OAAA;QACA,IAAAnB,gBAAA,CAAAT,aAAA,EAAAU,IAAA,EAAAkB,OAAA,GAAAA,OAAA,CAAAtC,aAAA,4BAAAmC,KAAA,CAAAnC,aAAA;UACAmC,KAAA,CAAAjC,iBAAA,4BAAAkB,IAAA,EAAAkB,OAAA;QACA;MACA;MACAH,KAAA,CAAA/B,iBAAA;QACA8B,aAAA;MACA;IACA;IACA,SAAAA,cAAA;MACAD,GAAA;MACAvB,aAAA;IACA;IACA,OAAAmB,KAAA;EACA;EACA;;;;;;AAaA,EAAAxB,mBAAA;AACA,SAAAsB,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}