{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Channel, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\nvar Serializer = /** @class */function () {\n  function Serializer(logger) {\n    dynamicProto(Serializer, this, function (_self) {\n      /**\r\n       * Serializes the current object to a JSON string.\r\n       */\n      _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\n        var output = _serializeObject(input, \"root\");\n        try {\n          return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\n        } catch (e) {\n          // if serialization fails return an empty string\n          _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */]) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\n        }\n      };\n      function _serializeObject(source, name) {\n        var circularReferenceCheck = \"__aiCircularRefCheck\";\n        var output = {};\n        if (!source) {\n          _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", {\n            name: name\n          }, true);\n          return output;\n        }\n        if (source[circularReferenceCheck]) {\n          _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", {\n            name: name\n          }, true);\n          return output;\n        }\n        if (!source.aiDataContract) {\n          // special case for measurements/properties/tags\n          if (name === \"measurements\") {\n            output = _serializeStringMap(source, \"number\", name);\n          } else if (name === \"properties\") {\n            output = _serializeStringMap(source, \"string\", name);\n          } else if (name === \"tags\") {\n            output = _serializeStringMap(source, \"string\", name);\n          } else if (isArray(source)) {\n            output = _serializeArray(source, name);\n          } else {\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", {\n              name: name\n            }, true);\n            try {\n              // verify that the object can be stringified\n              getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\n              output = source;\n            } catch (e) {\n              // if serialization fails return an empty string\n              _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */]) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\n            }\n          }\n          return output;\n        }\n        source[circularReferenceCheck] = true;\n        objForEachKey(source.aiDataContract, function (field, contract) {\n          var isRequired = isFunction(contract) ? contract() & 1 /* FieldType.Required */ : contract & 1 /* FieldType.Required */;\n          var isHidden = isFunction(contract) ? contract() & 4 /* FieldType.Hidden */ : contract & 4 /* FieldType.Hidden */;\n          var isArray = contract & 2 /* FieldType.Array */;\n          var isPresent = source[field] !== undefined;\n          var isObj = isObject(source[field]) && source[field] !== null;\n          if (isRequired && !isPresent && !isArray) {\n            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", {\n              field: field,\n              name: name\n            });\n            // If not in debug mode, continue and hope the error is permissible\n          } else if (!isHidden) {\n            // Don't serialize hidden fields\n            var value = void 0;\n            if (isObj) {\n              if (isArray) {\n                // special case; recurse on each object in the source array\n                value = _serializeArray(source[field], field);\n              } else {\n                // recurse on the source object in this field\n                value = _serializeObject(source[field], field);\n              }\n            } else {\n              // assign the source field to the output even if undefined or required\n              value = source[field];\n            }\n            // only emit this field if the value is defined\n            if (value !== undefined) {\n              output[field] = value;\n            }\n          }\n        });\n        delete source[circularReferenceCheck];\n        return output;\n      }\n      function _serializeArray(sources, name) {\n        var output;\n        if (!!sources) {\n          if (!isArray(sources)) {\n            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", {\n              name: name\n            }, true);\n          } else {\n            output = [];\n            for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\n              var source = sources[i];\n              var item = _serializeObject(source, name + \"[\" + i + \"]\");\n              output[_DYN_PUSH /* @min:%2epush */](item);\n            }\n          }\n        }\n        return output;\n      }\n      function _serializeStringMap(map, expectedType, name) {\n        var output;\n        if (map) {\n          output = {};\n          objForEachKey(map, function (field, value) {\n            if (expectedType === \"string\") {\n              if (value === undefined) {\n                output[field] = \"undefined\";\n              } else if (value === null) {\n                output[field] = \"null\";\n              } else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\n                output[field] = \"invalid field: toString() is not defined.\";\n              } else {\n                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\n              }\n            } else if (expectedType === \"number\") {\n              if (value === undefined) {\n                output[field] = \"undefined\";\n              } else if (value === null) {\n                output[field] = \"null\";\n              } else {\n                var num = parseFloat(value);\n                output[field] = num;\n              }\n            } else {\n              output[field] = \"invalid field: \" + name + \" is of unknown type.\";\n              _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\n            }\n          });\n        }\n        return output;\n      }\n    });\n  }\n  // Removed Stub for Serializer.prototype.serialize.\n  // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n  // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n  Serializer.__ieDyn = 1;\n  return Serializer;\n}();\nexport { Serializer };","map":{"version":3,"names":["dynamicProto","_throwInternal","getJSON","isArray","isFunction","isObject","objForEachKey","_DYN_LENGTH","_DYN_PUSH","_DYN_SERIALIZE","_DYN_STRINGIFY","_DYN_TO_STRING","Serializer","logger","_self","input","output","_serializeObject","e","source","name","circularReferenceCheck","aiDataContract","_serializeStringMap","_serializeArray","field","contract","isRequired","isHidden","isPresent","undefined","isObj","value","sources","i","item","map","expectedType","num","parseFloat"],"sources":["/home/veeresh133/app/json-holder-api/react-az/node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Serializer.js"],"sourcesContent":["import dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Serializes the current object to a JSON string.\r\n     */\r\n    Serializer.prototype.serialize = function (input) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}