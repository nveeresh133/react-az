{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Common, 3.3.1\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\nvar _FIELDS_SEPARATOR = \";\";\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\nexport function parseConnectionString(connectionString) {\n  if (!connectionString) {\n    return {};\n  }\n  var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\n  var result = arrReduce(kvPairs, function (fields, kv) {\n    var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\n    if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) {\n      // only save fields with valid formats\n      var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\n      var value = kvParts[1];\n      fields[key] = value;\n    }\n    return fields;\n  }, {});\n  if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\n    // this is a valid connection string, so parse the results\n    if (result.endpointsuffix) {\n      // apply the default endpoints\n      var locationPrefix = result.location ? result.location + \".\" : \"\";\n      result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || \"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix;\n    }\n    // apply user override endpoint or the default endpoints\n    result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\n    if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\n      result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\n    }\n  }\n  return result;\n}\nexport var ConnectionStringParser = {\n  parse: parseConnectionString\n};","map":{"version":3,"names":["arrReduce","objKeys","strEndsWith","DEFAULT_BREEZE_ENDPOINT","_DYN_INGESTIONENDPOINT","_DYN_LENGTH","_DYN_SPLIT","_DYN_TO_LOWER_CASE","_FIELDS_SEPARATOR","_FIELD_KEY_VALUE_SEPARATOR","parseConnectionString","connectionString","kvPairs","result","fields","kv","kvParts","key","value","endpointsuffix","locationPrefix","location","slice","ConnectionStringParser","parse"],"sources":["/home/veeresh133/app/api-call/react-az/node_modules/@microsoft/applicationinsights-common/dist-es5/ConnectionStringParser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map"],"mappings":";;;;;AAEA,SAAAA,SAAA,EAAAC,OAAA,EAAAC,WAAA;AACA,SAAAC,uBAAA;AACA,SAAAC,sBAAA,EAAAC,WAAA,EAAAC,UAAA,EAAAC,kBAAA;AACA,IAAAC,iBAAA;AACA,IAAAC,0BAAA;AACA,gBAAAC,sBAAAC,gBAAA;EACA,KAAAA,gBAAA;IACA;EACA;EACA,IAAAC,OAAA,GAAAD,gBAAA,CAAAL,UAAA,sBAAAE,iBAAA;EACA,IAAAK,MAAA,GAAAb,SAAA,CAAAY,OAAA,YAAAE,MAAA,EAAAC,EAAA;IACA,IAAAC,OAAA,GAAAD,EAAA,CAAAT,UAAA,sBAAAG,0BAAA;IACA,IAAAO,OAAA,CAAAX,WAAA;MAAA;MACA,IAAAY,GAAA,GAAAD,OAAA,IAAAT,kBAAA;MACA,IAAAW,KAAA,GAAAF,OAAA;MACAF,MAAA,CAAAG,GAAA,IAAAC,KAAA;IACA;IACA,OAAAJ,MAAA;EACA;EACA,IAAAb,OAAA,CAAAY,MAAA,EAAAR,WAAA;IACA;IACA,IAAAQ,MAAA,CAAAM,cAAA;MACA;MACA,IAAAC,cAAA,GAAAP,MAAA,CAAAQ,QAAA,GAAAR,MAAA,CAAAQ,QAAA;MACAR,MAAA,CAAAT,sBAAA,oCAAAS,MAAA,CAAAT,sBAAA,kDAAAgB,cAAA,WAAAP,MAAA,CAAAM,cAAA;IACA;IACA;IACAN,MAAA,CAAAT,sBAAA,oCAAAS,MAAA,CAAAT,sBAAA,qCAAAD,uBAAA;IACA,IAAAD,WAAA,CAAAW,MAAA,CAAAT,sBAAA;MACAS,MAAA,CAAAT,sBAAA,oCAAAS,MAAA,CAAAT,sBAAA,kCAAAkB,KAAA;IACA;EACA;EACA,OAAAT,MAAA;AACA;AACA,WAAAU,sBAAA;EACAC,KAAA,EAAAd;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}