{"ast":null,"code":"import React from'react';import{withAITracking}from'@microsoft/applicationinsights-react-js';import{ReactPlugin}from'@microsoft/applicationinsights-react-js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends React.Component{constructor(props){super(props);this.state={data:null,error:null,loading:false,buttonClicked:''};this.handleButtonClick=this.handleButtonClick.bind(this);this.handlePopState=this.handlePopState.bind(this);this.fetchDataForPath=this.fetchDataForPath.bind(this);}componentDidMount(){// Listen for changes in browser history (back/forward or manual URL entry)\nwindow.addEventListener('popstate',this.handlePopState);// Handle the initial URL when the page loads\nthis.fetchDataForPath();}componentWillUnmount(){// Clean up the event listener\nwindow.removeEventListener('popstate',this.handlePopState);}handlePopState(){this.fetchDataForPath();}async fetchDataForPath(){const validPaths={'/posts':{operationName:'GetPostsOperation',endpoint:'https://jsonplaceholder.typicode.com/posts',urlPath:'/posts',buttonClicked:'GetPostsOperation'},'/users':{operationName:'GetUsersOperation',endpoint:'https://jsonplaceholder.typicode.com/users',urlPath:'/users',buttonClicked:'GetUsersOperation'}};const currentPath=window.location.pathname;const route=validPaths[currentPath];if(route){// Start tracking the operation\nthis.props.appInsights.startTrackEvent(route.operationName);this.setState({loading:true,error:null,buttonClicked:route.operationName});try{const response=await fetch(route.endpoint);if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();this.setState({data,error:null,loading:false});// Stop tracking and log successful data fetch\nthis.props.appInsights.stopTrackEvent(route.operationName,{status:'success'});}catch(error){this.setState({data:null,error:error.message,loading:false});// Stop tracking and log failed data fetch\nthis.props.appInsights.stopTrackEvent(route.operationName,{status:'failure',error:error.message});}}else{// Show error message if the URL is invalid\nthis.setState({error:`The page at ${currentPath} doesn't exist.`,data:null,loading:false,buttonClicked:''});}}async handleButtonClick(operationName,endpoint,urlPath){// Change the URL manually without reloading the page\nwindow.history.pushState({},'',urlPath);// Fetch data based on the new path\nawait this.fetchDataForPath();}render(){const{data,error,loading,buttonClicked}=this.state;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hello, Welcome to the React World!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.handleButtonClick('GetPostsOperation','https://jsonplaceholder.typicode.com/posts','/posts'),disabled:loading,children:loading&&buttonClicked==='GetPostsOperation'?'Loading...':'Fetch Posts'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.handleButtonClick('GetUsersOperation','https://jsonplaceholder.typicode.com/users','/users'),disabled:loading,children:loading&&buttonClicked==='GetUsersOperation'?'Loading...':'Fetch Users'}),/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsxs(\"p\",{style:{color:'red'},children:[\"Error: \",error]}),data&&/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(data,null,2)})]})]});}}export default withAITracking(ReactPlugin,App);","map":{"version":3,"names":["React","withAITracking","ReactPlugin","jsx","_jsx","jsxs","_jsxs","App","Component","constructor","props","state","data","error","loading","buttonClicked","handleButtonClick","bind","handlePopState","fetchDataForPath","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","validPaths","operationName","endpoint","urlPath","currentPath","location","pathname","route","appInsights","startTrackEvent","setState","response","fetch","ok","Error","json","stopTrackEvent","status","message","history","pushState","render","className","children","onClick","disabled","style","color","JSON","stringify"],"sources":["/home/veeresh133/app/test-error-react/react-az/src/App.js"],"sourcesContent":["import React from 'react';\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\nimport { ReactPlugin } from '@microsoft/applicationinsights-react-js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            error: null,\n            loading: false,\n            buttonClicked: '',\n        };\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handlePopState = this.handlePopState.bind(this);\n        this.fetchDataForPath = this.fetchDataForPath.bind(this);\n    }\n\n    componentDidMount() {\n        // Listen for changes in browser history (back/forward or manual URL entry)\n        window.addEventListener('popstate', this.handlePopState);\n       \n        // Handle the initial URL when the page loads\n        this.fetchDataForPath();\n    }\n\n    componentWillUnmount() {\n        // Clean up the event listener\n        window.removeEventListener('popstate', this.handlePopState);\n    }\n\n    handlePopState() {\n        this.fetchDataForPath();\n    }\n\n    async fetchDataForPath() {\n        const validPaths = {\n            '/posts': {\n                operationName: 'GetPostsOperation',\n                endpoint: 'https://jsonplaceholder.typicode.com/posts',\n                urlPath: '/posts',\n                buttonClicked: 'GetPostsOperation'\n            },\n            '/users': {\n                operationName: 'GetUsersOperation',\n                endpoint: 'https://jsonplaceholder.typicode.com/users',\n                urlPath: '/users',\n                buttonClicked: 'GetUsersOperation'\n            }\n        };\n\n        const currentPath = window.location.pathname;\n        const route = validPaths[currentPath];\n\n        if (route) {\n            // Start tracking the operation\n            this.props.appInsights.startTrackEvent(route.operationName);\n\n            this.setState({ loading: true, error: null, buttonClicked: route.operationName });\n\n            try {\n                const response = await fetch(route.endpoint);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n\n                this.setState({ data, error: null, loading: false });\n\n                // Stop tracking and log successful data fetch\n                this.props.appInsights.stopTrackEvent(route.operationName, { status: 'success' });\n            } catch (error) {\n                this.setState({ data: null, error: error.message, loading: false });\n\n                // Stop tracking and log failed data fetch\n                this.props.appInsights.stopTrackEvent(route.operationName, { status: 'failure', error: error.message });\n            }\n        } else {\n            // Show error message if the URL is invalid\n            this.setState({\n                error: `The page at ${currentPath} doesn't exist.`,\n                data: null,\n                loading: false,\n                buttonClicked: ''\n            });\n        }\n    }\n\n    async handleButtonClick(operationName, endpoint, urlPath) {\n        // Change the URL manually without reloading the page\n        window.history.pushState({}, '', urlPath);\n\n        // Fetch data based on the new path\n        await this.fetchDataForPath();\n    }\n\n    render() {\n        const { data, error, loading, buttonClicked } = this.state;\n\n        return (\n            <div className=\"App\">\n                <h1>Hello, Welcome to the React World!</h1>\n                <button\n                    onClick={() => this.handleButtonClick('GetPostsOperation', 'https://jsonplaceholder.typicode.com/posts', '/posts')}\n                    disabled={loading}\n                >\n                    {loading && buttonClicked === 'GetPostsOperation' ? 'Loading...' : 'Fetch Posts'}\n                </button>\n                <button\n                    onClick={() => this.handleButtonClick('GetUsersOperation', 'https://jsonplaceholder.typicode.com/users', '/users')}\n                    disabled={loading}\n                >\n                    {loading && buttonClicked === 'GetUsersOperation' ? 'Loading...' : 'Fetch Users'}\n                </button>\n                <div>\n                    {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n                    {data && <pre>{JSON.stringify(data, null, 2)}</pre>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withAITracking(ReactPlugin, App);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}